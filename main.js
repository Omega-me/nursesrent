(()=>{"use strict";var e={"./packages/apps/nursesrent-api/src/app/index.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("path"),a=s("express"),o=s("morgan"),n=s("cors"),i=s("cookie-parser"),u=s("hpp"),p=s("express-mongo-sanitize"),d=s("xss-clean"),c=s("express-rate-limit"),l=s("helmet"),y=s("./packages/apps/nursesrent-api/src/utils/constants.ts"),h=s("./packages/libs/shared/src/index.ts"),f=s("./packages/apps/nursesrent-api/src/utils/appError.ts"),m=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),g=s("./packages/apps/nursesrent-api/src/routes/index.ts"),S=a(),v=(0,c.default)({max:100,windowMs:36e5,message:"To many request from this IP, please try again in one hour!"});S.use((0,l.default)()),"development"===y.ENV.DEV&&S.use(o("dev")),S.use("/assets",a.static(r.join(__dirname,"assets"))),S.use(n({origin:!0,credentials:!0})),S.use(`${y.API_ROUTE}`,v),S.use(a.json()),S.use(i()),S.use(p()),S.use(d()),S.use(u()),S.get("/",((e,t)=>{t.status(h.eStatusCode.OK).json({status:y.STATUS.SUCCESS,message:"Welcome to nurses rent api"})})),S.get(h.eApiRoutes.BASE,((e,t)=>{t.status(h.eStatusCode.OK).json({status:"success",data:"welcome to nurses rent api"})})),S.use(`${h.eApiRoutes.BASE}/${h.eApiRoutes.PROPERTIES}`,g.propertyRouter),S.use(`${h.eApiRoutes.BASE}/${h.eApiRoutes.HOST}`,g.hostRouter),S.use(`${h.eApiRoutes.BASE}/${h.eApiRoutes.NURSE}`,g.nurseRouter),S.all("*",((e,t,s)=>{s(new f.AppError(`Can't find ${e.originalUrl} on this server!`,h.eStatusCode.NOT_FOUND))})),S.use(m.globalErrorHandler),t.default=S},"./packages/apps/nursesrent-api/src/controllers/booking.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),a=s("./packages/apps/nursesrent-api/src/models/booking.model.ts"),o=r.handlerFactory.createOne(a.default),n=r.handlerFactory.getAll(a.default),i=r.handlerFactory.getOne(a.default),u=r.handlerFactory.updateOne(a.default),p=r.handlerFactory.deleteOne(a.default);t.default={getAll:n,create:o,getOne:i,updateOne:u,deleteOne:p}},"./packages/apps/nursesrent-api/src/controllers/globalErrorHandler.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.globalErrorHandler=void 0;const r=s("./packages/libs/shared/src/index.ts"),a=s("./packages/apps/nursesrent-api/src/utils/index.ts"),o=s("./packages/apps/nursesrent-api/src/utils/index.ts");t.globalErrorHandler=(e,t,s,n)=>{if(e.statusCode=e.statusCode||r.eStatusCode.INTERNAL_SERVER_ERROR,e.status=e.status||o.STATUS.ERROR,"development"===o.ENV.DEV)((e,t,s)=>{const r=new a.AppError(e.message,e.statusCode);t.originalUrl.startsWith("/api")?s.status(e.statusCode).json({status:r.status,error:r,statusCode:e.statusCode,message:r.message,stack:r.stack}):(console.error("ERROR \ud83d\udca5",e),s.status(e.statusCode).render("error",{title:"Something went very wrong!",statusCode:e.statusCode,msg:e.message}))})(e,t,s);else if("development"===o.ENV.PROD){let n=Object.assign({},e);n.message=e.message,n.name=e.name,n.name===o.ERRORTYPES.CASTERROR&&(n=(e=>{const t=`Invalid ${e.path}: ${e.value}.`;return new a.AppError(t,r.eStatusCode.BAD_REQUEST)})(n)),n.code===o.ERRORTYPES.DUBLICATEFIELDERROR&&(n=(e=>{const t=`Duplicate field value: ${e.message.match(/(["'])(\\?.)*?\1/)[0]}. Please use another value!`;return new a.AppError(t,r.eStatusCode.CONFLICT)})(n)),n.name===o.ERRORTYPES.VALIDATIONERROR&&(n=(e=>{const t=`Invalid input data. ${Object.values(e.errors).map((e=>e.message)).join(". ")}`;return new a.AppError(t,r.eStatusCode.CONFLICT)})(n)),n.name===o.ERRORTYPES.JSONWEBTOKENERROR&&(n=new a.AppError("Invalid token. Please log in again!",r.eStatusCode.UNAUTHORIZED)),n.name===o.ERRORTYPES.TOKENEXPIREDERROR&&(n=new a.AppError("Your token has expired! Please log in again.",r.eStatusCode.UNAUTHORIZED)),((e,t,s)=>{t.originalUrl.startsWith("/api")?e.isOperational?s.status(e.statusCode).json({status:e.status,statusCode:e.statusCode,message:e.message}):(console.error("ERROR \ud83d\udca5",e),s.status(r.eStatusCode.INTERNAL_SERVER_ERROR).json({status:"error",statusCode:r.eStatusCode.INTERNAL_SERVER_ERROR,message:"Something went very wrong!"})):(console.error("ERROR \ud83d\udca5",e),s.status(e.statusCode).render("error",{title:"Something went very wrong!",statusCode:e.statusCode,msg:"Please try again later."}))})(n,t,s)}}},"./packages/apps/nursesrent-api/src/controllers/handlerFactory.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("tslib"),a=s("./packages/libs/shared/src/index.ts"),o=s("./packages/apps/nursesrent-api/src/utils/index.ts"),n=s("./packages/apps/nursesrent-api/src/utils/index.ts"),i=s("./packages/apps/nursesrent-api/src/utils/index.ts"),u={getAll:e=>(0,o.catchAsync)(((t,s,i)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=new o.ApiFeatures(e.find(),t.query).filter().sort().limitFields().paginate(),i=yield r.query;s.status(a.eStatusCode.OK).json({status:n.STATUS.SUCCESS,results:i.length,data:i})})))),getOne:(e,t)=>(0,o.catchAsync)(((s,u,p)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{id:r}=s.params;(0,o.checkId)(r,p);let d=e.findById(r);t&&(d=d.populate(t));const c=yield d;if(!c)return p(new o.AppError(i.NO_DOC_FOUND,a.eStatusCode.NOT_FOUND));u.status(a.eStatusCode.OK).json({status:n.STATUS.SUCCESS,data:c})})))),createOne:e=>(0,o.catchAsync)(((t,s,o)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=yield e.create(t.body);s.status(a.eStatusCode.CREATED).json({status:n.STATUS.SUCCESS,data:r})})))),updateOne:e=>(0,o.catchAsync)(((t,s,u)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{id:r}=t.params;(0,o.checkId)(r,u);const p=yield e.findByIdAndUpdate(r,t.body,{new:!0,runValidators:!0});if(!p)return u(new o.AppError(i.NO_DOC_FOUND,a.eStatusCode.NOT_FOUND));s.status(a.eStatusCode.OK).json({status:n.STATUS.SUCCESS,data:p})})))),deleteOne:e=>(0,o.catchAsync)(((t,s,u)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{id:r}=t.params;(0,o.checkId)(r,u);if(!(yield e.findByIdAndDelete(r)))return u(new o.AppError(i.NO_DOC_FOUND,a.eStatusCode.NOT_FOUND));s.status(a.eStatusCode.NO_CONTENT).json({status:n.STATUS.SUCCESS,data:null})}))))};t.default=u},"./packages/apps/nursesrent-api/src/controllers/host.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),a=s("./packages/apps/nursesrent-api/src/models/host.model.ts"),o=r.handlerFactory.createOne(a.default),n=r.handlerFactory.getAll(a.default),i=r.handlerFactory.getOne(a.default),u=r.handlerFactory.updateOne(a.default),p=r.handlerFactory.deleteOne(a.default);t.default={getAll:n,create:o,getOne:i,updateOne:u,deleteOne:p}},"./packages/apps/nursesrent-api/src/controllers/hostPayment.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),a=s("./packages/apps/nursesrent-api/src/models/hostPayment.model.ts"),o=r.handlerFactory.createOne(a.default),n=r.handlerFactory.getAll(a.default),i=r.handlerFactory.getOne(a.default),u=r.handlerFactory.updateOne(a.default),p=r.handlerFactory.deleteOne(a.default);t.default={getAll:n,create:o,getOne:i,updateOne:u,deleteOne:p}},"./packages/apps/nursesrent-api/src/controllers/hostauth.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.hostauth=void 0;const r=s("tslib"),a=s("./packages/libs/shared/src/index.ts"),o=s("util"),n=s("./packages/apps/nursesrent-api/src/models/index.ts"),i=s("jsonwebtoken"),u=s("./packages/apps/nursesrent-api/src/utils/index.ts"),p=s("./packages/apps/nursesrent-api/src/utils/index.ts"),d=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{firstName:r,lastName:o,phone:i,email:p,password:d,passwordConfirm:c,dlNumber:l,expirationDate:y,state:h}=e.body,f={firstName:r,lastName:o,phone:i,email:p,password:d,passwordConfirm:c,dlNumber:l,expirationDate:y,state:h},m=new n.Host(f);if(yield m.save()){const r=yield new u.Email(f,(0,u.generateUrl)(e).baseFrontUrl,"Currently we cannot create an account, please try again latter!",s).sendWelcome();r?r&&(0,u.sendUserTokenSuccess)(m,t,a.eStatusCode.CREATED):yield n.Host.findByIdAndDelete(m.id)}})))),c=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{user:r}=e;if(r.isverified)return s(new u.AppError("Users e-mail is not verified!",a.eStatusCode.UNAUTHORIZED));const o=yield r.createverifyToken(),n=(0,u.generateUrl)(e);if(yield new u.Email(r,`${n.baseFrontUrl}/host/verify/${o}`,"E-mail sent failed, please try again latter!",s).sendEmailVerification()){if(yield r.save({validateBeforeSave:!1}),"development"===p.ENV.DEV&&!r.isverified)return t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an e-mail with instructions on how to verufy your email account."});t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an e-mail with instructions on how to verufy your email account."})}})))),l=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{token:r}=e.params,o=yield(0,u.signOrEncryptTokens)(r),i=yield n.Host.findOne({verificationToken:o.hashedToken});return i?i.isVerified?s(new u.AppError("This host is verified",a.eStatusCode.CONFLICT)):(i.verificationToken=void 0,i.isVerified=!0,yield i.save({validateBeforeSave:!1}),void t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"Host verified successfuly!"})):s(new u.AppError("Verification failed, please try again!",a.eStatusCode.UNAUTHORIZED))})))),y=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{email:r,password:o}=e.body;if(!r||!o)return s(new u.AppError("Please enter your e-mail or password!",a.eStatusCode.BAD_REQUEST));const i=yield n.Host.findOne({email:r}).select("+password");return i&&(yield i.schema.methods.checkPassword(o,i.password))?void(0,u.sendUserTokenSuccess)(i,t):s(new u.AppError("E-mail or password is not correct!",a.eStatusCode.BAD_REQUEST))})))),h=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){let t="";if(e.headers.authorization&&e.headers.authorization.startsWith("Bearer")&&(t=e.headers.authorization.split(" ")[1]),e.cookies&&e.cookies.jwt&&(t=e.cookies.jwt),!t)return s(new u.AppError("You are not logged in, please log in!",a.eStatusCode.UNAUTHORIZED));const r=yield(0,o.promisify)(i.verify)(t,process.env.JWT_SECRET_KEY),p=yield n.Host.findById(r.id);return p?p.passwordChangetAfter(r.iat)?s(new u.AppError("This host has changed the password lattely, please login again with the new password!",a.eStatusCode.UNAUTHORIZED)):(e.user=p,void s()):s(new u.AppError("This token has expired, please login again!",a.eStatusCode.UNAUTHORIZED))})))),f=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=yield n.Host.findOne({email:e.body.email});if(!r)return s(new u.AppError("Host with this email does not exists!",a.eStatusCode.NOT_FOUND));if(!1===r.isVerified)return s(new u.AppError("Please verify your account!",a.eStatusCode.UNAUTHORIZED));const o=yield r.createPasswordResetToken(),i=(0,u.generateUrl)(e);try{if(yield new u.Email(r,`${i.baseFrontUrl}/host/changepassword/${o}`,"Failed to sent e-mail, please try again latter!",s).sendPasswordReset()){if(yield r.save({validateBeforeSave:!1}),"development"===p.ENV.DEV)return t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an email with instructions on how to change your password."});t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an email with instructions on how to change your password."})}}catch(d){return r.passwordResetToken=void 0,r.passwordResetExpires=void 0,yield r.save({validateBeforeSave:!1}),s(new u.AppError("Failed to sent e-mail, please try again latter!",a.eStatusCode.INTERNAL_SERVER_ERROR))}})))),m=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=yield(0,u.signOrEncryptTokens)(e.params.token),o=yield n.Host.findOne({passwordResetToken:r.hashedToken,passwordResetExpires:{$gt:Date.now()}});return o?!1===o.isVerified?s(new u.AppError("Please verify your account!",a.eStatusCode.UNAUTHORIZED)):(o.password=e.body.password,o.passwordConfirm=e.body.passwordConfirm,o.passwordResetExpires=void 0,o.passwordResetToken=void 0,yield o.save(),void(0,u.sendUserTokenSuccess)(o,t)):s(new u.AppError("Token is expired!",a.eStatusCode.BAD_REQUEST))})))),g=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=yield n.Host.findById(e.user.id).select("+password");if(!1===r.isVerified)return s(new u.AppError("Please verify your account!",a.eStatusCode.UNAUTHORIZED));const{password:o,passwordConfirm:i}=e.body;if(!r.checkPassword(i,r.password))return s(new u.AppError("Incorrect password!",a.eStatusCode.BAD_REQUEST));r.password=o,r.passwordConfirm=i,yield r.save(),(0,u.sendUserTokenSuccess)(r,t)})))),S=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){if(!e.user||!e.user.refreshToken)return s(new u.AppError("You are not logged in, please login!",a.eStatusCode.UNAUTHORIZED));const r=yield n.Host.findOne({refreshToken:e.user.refreshToken});if(yield r.save({validateBeforeSave:!1}),!r)return s(new u.AppError("You are not logged in, please login!",401));(0,u.sendUserTokenSuccess)(r,t)}))));t.hostauth={signup:d,sendVerifyAccountEmail:c,verify:l,signin:y,logOut:(e,t)=>{t.cookie("jwt","loggedout",{expires:new Date(Date.now()+1e4),httpOnly:!0}),t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS})},protect:h,forgotPassword:f,resetPassword:m,updatepassword:g,refresh:S}},"./packages/apps/nursesrent-api/src/controllers/index.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.handlerFactory=void 0;const r=s("tslib");var a=s("./packages/apps/nursesrent-api/src/controllers/handlerFactory.ts");Object.defineProperty(t,"handlerFactory",{enumerable:!0,get:function(){return a.default}}),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/globalErrorHandler.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/property.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/hostauth.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/nurseauth.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/host.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/nurse.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/booking.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/review.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/hostPayment.controller.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/controllers/nursePayment.controller.ts"),t)},"./packages/apps/nursesrent-api/src/controllers/nurse.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),a=s("./packages/apps/nursesrent-api/src/models/nurse.model.ts"),o=r.handlerFactory.createOne(a.default),n=r.handlerFactory.getAll(a.default),i=r.handlerFactory.getOne(a.default),u=r.handlerFactory.updateOne(a.default),p=r.handlerFactory.deleteOne(a.default);t.default={getAll:n,create:o,getOne:i,updateOne:u,deleteOne:p}},"./packages/apps/nursesrent-api/src/controllers/nursePayment.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),a=s("./packages/apps/nursesrent-api/src/models/index.ts"),o=r.handlerFactory.createOne(a.NursePayment),n=r.handlerFactory.getAll(a.NursePayment),i=r.handlerFactory.getOne(a.NursePayment),u=r.handlerFactory.updateOne(a.NursePayment),p=r.handlerFactory.deleteOne(a.NursePayment);t.default={getAll:n,create:o,getOne:i,updateOne:u,deleteOne:p}},"./packages/apps/nursesrent-api/src/controllers/nurseauth.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.nurseauth=void 0;const r=s("tslib"),a=s("./packages/libs/shared/src/index.ts"),o=s("util"),n=s("./packages/apps/nursesrent-api/src/models/index.ts"),i=s("jsonwebtoken"),u=s("./packages/apps/nursesrent-api/src/utils/index.ts"),p=s("./packages/apps/nursesrent-api/src/utils/index.ts"),d=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{displayName:r,email:o,dateOfBirth:i,licenceNumber:p,licenceType:d,password:c,passwordConfirm:l,phone:y,state:h}=e.body,f={displayName:r,email:o,dateOfBirth:i,phone:y,state:h,licenceNumber:p,licenceType:d,password:c,passwordConfirm:l},m=new n.Nurse(f);if(yield m.save()){const r=yield new u.Email(f,(0,u.generateUrl)(e).baseFrontUrl,"Currently we cannot create an account, please try again latter!",s).sendWelcome();r?r&&(0,u.sendUserTokenSuccess)(m,t,a.eStatusCode.CREATED):yield n.Nurse.findByIdAndDelete(m.id)}})))),c=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{user:r}=e;if(r.isVerified)return s(new u.AppError("Users e-mail is not verified!",a.eStatusCode.UNAUTHORIZED));const o=yield r.createverifyToken(),n=(0,u.generateUrl)(e);if(yield new u.Email(r,`${n.baseFrontUrl}/nurse/verify/${o}`,"E-mail sent failed, please try again latter!",s).sendEmailVerification()){if(yield r.save({validateBeforeSave:!1}),"development"===p.ENV.DEV&&!r.isVerified)return t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an e-mail with instructions on how to verufy your email account."});t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an e-mail with instructions on how to verufy your email account."})}})))),l=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{token:r}=e.params,o=yield(0,u.signOrEncryptTokens)(r),i=yield n.Nurse.findOne({verificationToken:o.hashedToken});return i?i.isVerified?s(new u.AppError("This nurse is verified.",a.eStatusCode.CONFLICT)):(i.verificationToken=void 0,i.isVerified=!0,yield i.save({validateBeforeSave:!1}),void t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"Nurse verified successfuly!"})):s(new u.AppError("Verification failed, please try again!",a.eStatusCode.UNAUTHORIZED))})))),y=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const{email:r,password:o}=e.body;if(!r||!o)return s(new u.AppError("Please enter your e-mail or password!",a.eStatusCode.BAD_REQUEST));const i=yield n.Nurse.findOne({email:r}).select("+password");return i&&(yield i.schema.methods.checkPassword(o,i.password))?void(0,u.sendUserTokenSuccess)(i,t):s(new u.AppError("E-mail or password is not correct!",a.eStatusCode.BAD_REQUEST))})))),h=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){let t="";if(e.headers.authorization&&e.headers.authorization.startsWith("Bearer")&&(t=e.headers.authorization.split(" ")[1]),e.cookies&&e.cookies.jwt&&(t=e.cookies.jwt),!t)return s(new u.AppError("You are not logged in, please log in!",a.eStatusCode.UNAUTHORIZED));const r=yield(0,o.promisify)(i.verify)(t,process.env.JWT_SECRET_KEY),p=yield n.Nurse.findById(r.id);return p?p.passwordChangetAfter(r.iat)?s(new u.AppError("This nurset has changed the password lattely, please login again with the new password!",a.eStatusCode.UNAUTHORIZED)):(e.user=p,void s()):s(new u.AppError("This token has expired, please login again!",a.eStatusCode.UNAUTHORIZED))})))),f=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=yield n.Nurse.findOne({email:e.body.email});if(!r)return s(new u.AppError("Nurse with this email does not exists!",a.eStatusCode.NOT_FOUND));if(!1===r.isVerified)return s(new u.AppError("Please verify your account!",a.eStatusCode.UNAUTHORIZED));const o=yield r.createPasswordResetToken(),i=(0,u.generateUrl)(e);try{if(yield new u.Email(r,`${i.baseFrontUrl}/nurse/changepassword/${o}`,"Failed to sent e-mail, please try again latter!",s).sendPasswordReset()){if(yield r.save({validateBeforeSave:!1}),"development"===p.ENV.DEV)return t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an email with instructions on how to change your password."});t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS,message:"We have sent an email with instructions on how to change your password."})}}catch(d){return r.passwordResetToken=void 0,r.passwordResetExpires=void 0,yield r.save({validateBeforeSave:!1}),s(new u.AppError("Failed to sent e-mail, please try again latter!",a.eStatusCode.INTERNAL_SERVER_ERROR))}})))),m=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=yield(0,u.signOrEncryptTokens)(e.params.token),o=yield n.Nurse.findOne({passwordResetToken:r.hashedToken,passwordResetExpires:{$gt:Date.now()}});return o?!1===o.isVerified?s(new u.AppError("Please verify your account!",a.eStatusCode.UNAUTHORIZED)):(o.password=e.body.password,o.passwordConfirm=e.body.passwordConfirm,o.passwordResetExpires=void 0,o.passwordResetToken=void 0,yield o.save(),void(0,u.sendUserTokenSuccess)(o,t)):s(new u.AppError("Token is expired!",a.eStatusCode.BAD_REQUEST))})))),g=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=yield n.Nurse.findById(e.user.id).select("+password");if(!1===r.isVerified)return s(new u.AppError("Please verify your account!",a.eStatusCode.UNAUTHORIZED));const{password:o,passwordConfirm:i}=e.body;if(!r.checkPassword(i,r.password))return s(new u.AppError("Incorrect password!",a.eStatusCode.BAD_REQUEST));r.password=o,r.passwordConfirm=i,yield r.save(),(0,u.sendUserTokenSuccess)(r,t)})))),S=(0,u.catchAsync)(((e,t,s)=>r.__awaiter(void 0,void 0,void 0,(function*(){if(!e.user)return s(new u.AppError("You are not logged in, please login!",a.eStatusCode.UNAUTHORIZED));const r=yield n.Nurse.findById(e.user.id);if(r.save({validateBeforeSave:!1}),!r)return s(new u.AppError("You are not logged in, please login!",401));(0,u.sendUserTokenSuccess)(r,t)}))));t.nurseauth={signup:d,sendVerifyAccountEmail:c,verify:l,signin:y,logOut:(e,t)=>{t.cookie("jwt","loggedout",{expires:new Date(Date.now()+1e4),httpOnly:!0}),t.status(a.eStatusCode.OK).json({status:p.STATUS.SUCCESS})},protect:h,forgotPassword:f,resetPassword:m,updatepassword:g,refresh:S}},"./packages/apps/nursesrent-api/src/controllers/property.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/apps/nursesrent-api/src/models/index.ts"),a=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),o=a.handlerFactory.createOne(r.Property),n=a.handlerFactory.getAll(r.Property),i=a.handlerFactory.getOne(r.Property),u=a.handlerFactory.updateOne(r.Property),p=a.handlerFactory.deleteOne(r.Property);t.default={getAll:n,create:o,getOne:i,updateOne:u,deleteOne:p}},"./packages/apps/nursesrent-api/src/controllers/review.controller.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),a=s("./packages/apps/nursesrent-api/src/models/index.ts"),o=r.handlerFactory.createOne(a.Review),n=r.handlerFactory.getAll(a.Review),i=r.handlerFactory.getOne(a.Review),u=r.handlerFactory.updateOne(a.Review),p=r.handlerFactory.deleteOne(a.Review);t.default={getAll:n,create:o,getOne:i,updateOne:u,deleteOne:p}},"./packages/apps/nursesrent-api/src/models/booking.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("mongoose"),a=new r.Schema({price:{type:Number,require:[!0,"Booking must have a price!"]},createdAt:{type:Date,default:Date.now()},bookingDuration:{type:Number,required:[!0,"Booking must have a duration!"]},paid:{type:Boolean,default:!0},nurse:{type:r.Schema.Types.ObjectId,ref:"Nurse",required:[!0,"A booking must have been made by a nurse!"]},property:{type:r.Schema.Types.ObjectId,ref:"Property",required:[!0,"A property should be booked!"]}},{toJSON:{virtuals:!0},toObject:{virtuals:!0}}),o=r.default.model("Booking",a);t.default=o},"./packages/apps/nursesrent-api/src/models/host.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("tslib"),a=s("mongoose"),o=s("validator"),n=s("bcryptjs"),i=s("uuid"),u=s("./packages/apps/nursesrent-api/src/utils/index.ts"),p=new a.Schema({firstName:{type:String,required:[!0,"Please enter your first name."],trim:!0},lastName:{type:String,required:[!0,"Please enter your last name."],trim:!0},email:{type:String,required:[!0,"An email address is required."],unique:!0,lowercase:!0,validate:[o.default.isEmail,"Please eneter a valid email address."]},phone:{type:String,required:[!0,"A phone number is reuired."],validate:[o.default.isMobilePhone,"Please eneter a valid phone number."]},password:{type:String,required:[!0,"Please enter your password."],minlength:[8,"Password should be at least 8 characters long."],select:!1},passwordConfirm:{type:String,required:[!0,"Please confirn your password."],validate:{validator:function(e){return e===this.password},message:"Passwords are not the same."}},dlNumber:{type:Number,required:[!0,"Please enter the DL number."]},expirationDate:{type:Date,required:[!0,"Please enter the expiration number."]},state:{type:String,required:[!0,"Please specify the state."]},isVerified:{type:Boolean,default:!1},isActive:{type:Boolean,default:!0,select:!1},createdAt:{type:Date,default:Date.now()},disabled:{type:Boolean,default:!1},responseTime:String,numberOfReports:Number,responseRate:String,profilPicture:String,passwordResetToken:String,verificationToken:String,passwordChangetAt:Date,passwordResetExpires:Date,refreshToken:String,subscription:{type:a.Schema.Types.ObjectId,ref:"Subscription"},properties:[{type:a.Schema.Types.ObjectId,ref:"Property"}],payments:[{type:a.Schema.Types.ObjectId,ref:"HostPayment"}]},{toJSON:{virtuals:!0},toObject:{virtuals:!0}});p.pre("save",(function(e){if(!this.isModified("password")||this.isNew)return e();this.passwordChangetAt=Date.now()-1e3,e()})),p.pre("save",(function(e){return r.__awaiter(this,void 0,void 0,(function*(){if(!this.isModified("password"))return e();const t=yield n.hash(this.password,12);this.password=t,this.passwordConfirm=void 0,e()}))})),p.pre("save",(function(e){return r.__awaiter(this,void 0,void 0,(function*(){const t=(0,i.v4)(),s=yield n.hash(t,8);this.refreshToken=s,e()}))})),p.methods.checkPassword=function(e,t){return r.__awaiter(this,void 0,void 0,(function*(){return n.compareSync(e,t)}))},p.methods.passwordChangetAfter=function(e){if(this.passwordChangetAt){return e<parseInt(this.passwordChangetAt.getTime()/1e3,10)}return!1},p.methods.createPasswordResetToken=function(){return r.__awaiter(this,void 0,void 0,(function*(){const e=yield(0,u.signOrEncryptTokens)();return this.passwordResetToken=e.hashedToken,this.passwordResetExpires=Date.now()+6e5,e.token}))},p.methods.createverifyToken=function(){return r.__awaiter(this,void 0,void 0,(function*(){const e=yield(0,u.signOrEncryptTokens)();return this.verificationToken=e.hashedToken,e.token}))};const d=a.default.model("Host",p);t.default=d},"./packages/apps/nursesrent-api/src/models/hostPayment.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("mongoose"),a=new r.Schema({host:{type:r.Schema.Types.ObjectId,required:[!0,"Payment should belong to a nurse!"]}},{toJSON:{virtuals:!0},toObject:{virtuals:!0}}),o=r.default.model("HostPayment",a);t.default=o},"./packages/apps/nursesrent-api/src/models/index.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NursePayment=t.HostPayment=t.Subscription=t.Review=t.Property=t.Nurse=t.Host=t.Booking=void 0;var r=s("./packages/apps/nursesrent-api/src/models/booking.model.ts");Object.defineProperty(t,"Booking",{enumerable:!0,get:function(){return r.default}});var a=s("./packages/apps/nursesrent-api/src/models/host.model.ts");Object.defineProperty(t,"Host",{enumerable:!0,get:function(){return a.default}});var o=s("./packages/apps/nursesrent-api/src/models/nurse.model.ts");Object.defineProperty(t,"Nurse",{enumerable:!0,get:function(){return o.default}});var n=s("./packages/apps/nursesrent-api/src/models/property.model.ts");Object.defineProperty(t,"Property",{enumerable:!0,get:function(){return n.default}});var i=s("./packages/apps/nursesrent-api/src/models/review.model.ts");Object.defineProperty(t,"Review",{enumerable:!0,get:function(){return i.default}});var u=s("./packages/apps/nursesrent-api/src/models/subscription.model.ts");Object.defineProperty(t,"Subscription",{enumerable:!0,get:function(){return u.default}});var p=s("./packages/apps/nursesrent-api/src/models/hostPayment.model.ts");Object.defineProperty(t,"HostPayment",{enumerable:!0,get:function(){return p.default}});var d=s("./packages/apps/nursesrent-api/src/models/nursePayment.model.ts");Object.defineProperty(t,"NursePayment",{enumerable:!0,get:function(){return d.default}})},"./packages/apps/nursesrent-api/src/models/nurse.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("tslib"),a=s("./packages/libs/shared/src/index.ts"),o=s("mongoose"),n=s("validator"),i=s("bcryptjs"),u=s("uuid"),p=s("./packages/apps/nursesrent-api/src/utils/index.ts"),d=new o.Schema({displayName:{type:String,required:[!0,"Please enter your first name!"],trim:!0},email:{type:String,required:[!0,"An email address is required!"],unique:!0,lowercase:!0,validate:[n.default.isEmail,"Please eneter a valid email address!"]},phone:{type:String,required:[!0,"A phone number is reuired!"],validate:[n.default.isMobilePhone,"Please eneter a valid phone number!"]},dateOfBirth:{type:Date,required:[!0,"Please specify date of birth!"]},state:{type:String,required:[!0,"Please specify the state!"]},firstName:String,lastName:String,homeTown:String,dreamJob:String,travelWithPet:Boolean,about:String,propertyRental:{workExperience:{occupation:{type:String,enum:a.eOccupation},speciality:{type:String,enum:a.eSpeciality},favouriteStateToWork:{type:String,enum:a.eFavouriteStateToWork},certification:String,professionalTravelingSince:Date,current:Date,currentEmployer:String},travelingPreferences:{favouriteUnitType:[String],transportationMethod:[String]},reviewAndPreferences:String},favouriteProperties:{myCity:String,topThreeCities:[String]},password:{type:String,required:[!0,"Please enter your password!"],minlength:[8,"Password should be at least 8 characters long!"],select:!1},passwordConfirm:{type:String,required:[!0,"Please confirn your password!"],validate:{validator:function(e){return e===this.password},message:"Passwords are not the same!"}},licenceType:{type:String,required:[!0,"Nurse must have a licence type!"],enum:a.eLicenceType},licenceNumber:{type:Number,required:[!0,"Nurse must have a licence number!"]},isVerified:{type:Boolean,default:!1},isActive:{type:Boolean,default:!0,select:!1},createdAt:{type:Date,default:Date.now()},disabled:{type:Boolean,default:!1},profilPicture:String,passwordResetToken:String,verificationToken:String,passwordChangetAt:Date,passwordResetExpires:Date,refreshToken:String,reviews:[{type:o.Schema.Types.ObjectId,ref:"Review"}],bookings:[{type:o.Schema.Types.ObjectId,ref:"Booking"}],payments:[{type:o.Schema.Types.ObjectId,ref:"NursePayment"}]},{toJSON:{virtuals:!0},toObject:{virtuals:!0}});d.pre("save",(function(e){if(!this.isModified("password")||this.isNew)return e();this.passwordChangetAt=Date.now()-1e3,e()})),d.pre("save",(function(e){return r.__awaiter(this,void 0,void 0,(function*(){if(!this.isModified("password"))return e();const t=yield i.hash(this.password,12);this.password=t,this.passwordConfirm=void 0,e()}))})),d.pre("save",(function(e){return r.__awaiter(this,void 0,void 0,(function*(){const t=(0,u.v4)(),s=yield i.hash(t,8);this.refreshToken=s,e()}))})),d.methods.checkPassword=function(e,t){return r.__awaiter(this,void 0,void 0,(function*(){return i.compareSync(e,t)}))},d.methods.passwordChangetAfter=function(e){if(this.passwordChangetAt){return e<parseInt(this.passwordChangetAt.getTime()/1e3,10)}return!1},d.methods.createPasswordResetToken=function(){return r.__awaiter(this,void 0,void 0,(function*(){const e=yield(0,p.signOrEncryptTokens)();return this.passwordResetToken=e.hashedToken,this.passwordResetExpires=Date.now()+6e5,e.token}))},d.methods.createverifyToken=function(){return r.__awaiter(this,void 0,void 0,(function*(){const e=yield(0,p.signOrEncryptTokens)();return this.verificationToken=e.hashedToken,e.token}))};const c=o.default.model("Nurse",d);t.default=c},"./packages/apps/nursesrent-api/src/models/nursePayment.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("mongoose"),a=new r.Schema({nurse:{type:r.Schema.Types.ObjectId,required:[!0,"Payment should belong to a nurse!"]}},{toJSON:{virtuals:!0},toObject:{virtuals:!0}}),o=r.default.model("NursePayment",a);t.default=o},"./packages/apps/nursesrent-api/src/models/property.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/libs/shared/src/index.ts"),a=s("mongoose"),o=s("validator"),n=new a.Schema({title:{type:String,required:[!0,"Property must have a title!"],trim:!0},contactInformation:{firstName:{type:String,required:[!0,"Property must have a contact first name!"],trim:!0},lastName:{type:String,required:[!0,"Property must have a contact last name!"],trim:!0},email:{type:String,required:[!0,"Property must have a contact email!"],lowercase:!0,validate:[o.default.isEmail,"Property must have a valid contact email!"]},phone:{type:String,required:[!0,"Property must have a contact phone number!"],validate:[o.default.isMobilePhone,"Property must have a valid contact phone number!"]}},propertyType:{type:{type:String,required:[!0,"Property must have a type!"],enum:r.ePropertyType},units:{type:Number,required:[!0,"Property must have units specified!"]},isSubtle:{type:Boolean,default:!1}},location:{type:{type:String,default:"Point",enum:["Point"]},coordinates:{type:[Number],required:[!0,"Property must have location coordinates!"]},address:{type:String,required:[!0,"Property must have a location address!"]},description:{type:String,required:[!0,"Property must have a location description!"]}},details:{bedroom:{type:String,required:[!0,"Property must have bedrooms informations!"],enum:r.eBedroom},bathroom:{type:String,required:[!0,"Property must have a bathrooms informations!"],enum:r.eBathroom},isBathroomPrivate:{type:Boolean,default:!1},utitlitiesIncluded:[String]},minimumDuration:{type:Number,default:1,enum:r.eMinimumDuration},photos:{type:[String],required:[!0,"Some property photos are required!"]},description:{type:String,required:[!0,"Property must have a description!"]},amenities:[String],host:{type:a.Schema.Types.ObjectId,ref:"Host",required:[!0,"A property must be created by a host user!"]},booking:{type:a.Schema.Types.ObjectId,ref:"Booking"},reviews:[{type:a.Schema.Types.ObjectId,ref:"Review"}]},{toJSON:{virtuals:!0},toObject:{virtuals:!0}}),i=a.default.model("Property",n);t.default=i},"./packages/apps/nursesrent-api/src/models/review.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("mongoose"),a=new r.Schema({review:{type:String,required:[!0,"Review cannot be empty."],trim:!0},rating:{type:Number,min:1,max:5},createdAt:{type:Date,default:Date.now()},nurse:{type:r.default.Schema.Types.ObjectId,ref:"Nurse",required:[!0,"Reviw must be from a nurse!"]},property:{type:r.default.Schema.Types.ObjectId,ref:"Property",required:[!0,"Review must be writed for a property!"]}},{toJSON:{virtuals:!0},toObject:{virtuals:!0}}),o=r.default.model("Review",a);t.default=o},"./packages/apps/nursesrent-api/src/models/subscription.model.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("mongoose"),a=new r.Schema({creditCardNo:{type:String,required:[!0,"Subscription must have a credit card linked!"],trim:!0},createdAt:{type:Date,default:Date.now()},lastPayment:{type:Number,required:[!0,"A subscription must specify the last payment!"]},host:{type:r.default.Schema.Types.ObjectId,ref:"Host",required:[!0,"A subscription must be from a host user!"]}},{toJSON:{virtuals:!0},toObject:{virtuals:!0}}),o=r.default.model("Subscription",a);t.default=o},"./packages/apps/nursesrent-api/src/routes/booking.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=(0,s("express").Router)();t.default=r},"./packages/apps/nursesrent-api/src/routes/host.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/libs/shared/src/index.ts"),a=s("express"),o=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),n=(0,a.Router)();n.post(r.eApiRoutes.SIGNUP,o.hostauth.signup),n.post(r.eApiRoutes.VERIFYACCOUNT,o.hostauth.protect,o.hostauth.sendVerifyAccountEmail),n.post(`${r.eApiRoutes.VERIFYACCOUNT}/:token`,o.hostauth.protect,o.hostauth.verify),n.post(r.eApiRoutes.SIGNIN,o.hostauth.signin),n.post(r.eApiRoutes.REFRESHUSER,o.hostauth.protect,o.hostauth.refresh),n.post(r.eApiRoutes.FORGOTPASSWORD,o.hostauth.forgotPassword),n.post(`${r.eApiRoutes.RESETPASSWORD}/:token`,o.hostauth.resetPassword),n.post(r.eApiRoutes.UPDATEPASSWORD,o.hostauth.protect,o.hostauth.updatepassword),n.post(r.eApiRoutes.LOGOUT,o.hostauth.logOut),t.default=n},"./packages/apps/nursesrent-api/src/routes/hostPayment.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=(0,s("express").Router)();t.default=r},"./packages/apps/nursesrent-api/src/routes/index.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.nursePaymentRouter=t.hostPaymentRouter=t.subscriptionRouter=t.reviewRouter=t.bookingRouter=t.nurseRouter=t.hostRouter=t.propertyRouter=void 0;var r=s("./packages/apps/nursesrent-api/src/routes/property.routes.ts");Object.defineProperty(t,"propertyRouter",{enumerable:!0,get:function(){return r.default}});var a=s("./packages/apps/nursesrent-api/src/routes/host.routes.ts");Object.defineProperty(t,"hostRouter",{enumerable:!0,get:function(){return a.default}});var o=s("./packages/apps/nursesrent-api/src/routes/nurse.routes.ts");Object.defineProperty(t,"nurseRouter",{enumerable:!0,get:function(){return o.default}});var n=s("./packages/apps/nursesrent-api/src/routes/booking.routes.ts");Object.defineProperty(t,"bookingRouter",{enumerable:!0,get:function(){return n.default}});var i=s("./packages/apps/nursesrent-api/src/routes/review.routes.ts");Object.defineProperty(t,"reviewRouter",{enumerable:!0,get:function(){return i.default}});var u=s("./packages/apps/nursesrent-api/src/routes/subscription.routes.ts");Object.defineProperty(t,"subscriptionRouter",{enumerable:!0,get:function(){return u.default}});var p=s("./packages/apps/nursesrent-api/src/routes/hostPayment.routes.ts");Object.defineProperty(t,"hostPaymentRouter",{enumerable:!0,get:function(){return p.default}});var d=s("./packages/apps/nursesrent-api/src/routes/nursePayment.routes.ts");Object.defineProperty(t,"nursePaymentRouter",{enumerable:!0,get:function(){return d.default}})},"./packages/apps/nursesrent-api/src/routes/nurse.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("./packages/libs/shared/src/index.ts"),a=s("express"),o=s("./packages/apps/nursesrent-api/src/controllers/index.ts"),n=(0,a.Router)();n.post(r.eApiRoutes.SIGNUP,o.nurseauth.signup),n.post(r.eApiRoutes.VERIFYACCOUNT,o.nurseauth.protect,o.nurseauth.sendVerifyAccountEmail),n.post(`${r.eApiRoutes.VERIFYACCOUNT}/:token`,o.nurseauth.protect,o.nurseauth.verify),n.post(r.eApiRoutes.SIGNIN,o.nurseauth.signin),n.post(r.eApiRoutes.REFRESHUSER,o.nurseauth.protect,o.nurseauth.refresh),n.post(r.eApiRoutes.FORGOTPASSWORD,o.nurseauth.forgotPassword),n.post(`${r.eApiRoutes.RESETPASSWORD}/:token`,o.nurseauth.resetPassword),n.post(r.eApiRoutes.UPDATEPASSWORD,o.nurseauth.protect,o.nurseauth.updatepassword),n.post(r.eApiRoutes.LOGOUT,o.nurseauth.logOut),t.default=n},"./packages/apps/nursesrent-api/src/routes/nursePayment.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=(0,s("express").Router)();t.default=r},"./packages/apps/nursesrent-api/src/routes/property.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("express"),a=s("./packages/apps/nursesrent-api/src/controllers/property.controller.ts"),o=(0,r.Router)();o.route("/").get(a.default.getAll).post(a.default.create),o.route("/:id").get(a.default.getOne).patch(a.default.updateOne).delete(a.default.deleteOne),t.default=o},"./packages/apps/nursesrent-api/src/routes/review.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=(0,s("express").Router)();t.default=r},"./packages/apps/nursesrent-api/src/routes/subscription.routes.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=(0,s("express").Router)();t.default=r},"./packages/apps/nursesrent-api/src/utils/Email.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=s("tslib"),a=s("nodemailer"),o=s("nodemailer"),n=s("./packages/apps/nursesrent-api/src/utils/index.ts"),i=s("./packages/apps/nursesrent-api/src/utils/index.ts"),u=s("./packages/libs/shared/src/index.ts");t.default=class Email{constructor(e,t,s,r){this.to=e.email,this.firstname=e.firstName,this.lastname=e.lastName,this.url=t,this.from=`Nurses rent <${process.env.EMAIL_FROM}>`,this.next=r,this.isSuccess=!1,this.errorMessage=s}transporter(){return"development"===n.ENV.PROD?a.createTransport({service:"SendGrid",port:process.env.SENDGRID_PORT,auth:{user:process.env.SENDGRID_USERNAME,pass:process.env.SENDGRID_PASSWORD}}):(0,o.createTransport)({host:process.env.EMAIL_HOST,port:process.env.EMAIL_PORT,secure:!1,auth:{user:process.env.EMAIL_USERNAME,pass:process.env.EMAIL_PASSWORD}})}send(e,t){return r.__awaiter(this,void 0,void 0,(function*(){const e=`<a href=${this.url}>${this.url}</a>`,s={from:this.from,to:this.to,subject:t,html:e};yield this.transporter().sendMail(s).then((()=>this.isSuccess=!0)).catch((()=>{this.isSuccess=!1,this.next(new i.AppError(this.errorMessage,u.eStatusCode.INTERNAL_SERVER_ERROR))}))}))}sendWelcome(){return r.__awaiter(this,void 0,void 0,(function*(){return yield this.send("welcomeEmail","Hello and welcome to Nurses rent!"),this.isSuccess}))}sendPasswordReset(){return r.__awaiter(this,void 0,void 0,(function*(){return yield this.send("passwordReset","Change your pasword."),this.isSuccess}))}sendEmailVerification(){return r.__awaiter(this,void 0,void 0,(function*(){return yield this.send("emailVerification","Please verify your email!"),this.isSuccess}))}}},"./packages/apps/nursesrent-api/src/utils/apiFeatures.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ApiFeatures=void 0;t.ApiFeatures=class ApiFeatures{constructor(e,t){this.query=e,this.queryString=t}filter(){const e=Object.assign({},this.queryString);["page","sort","limit","fields"].forEach((t=>delete e[t]));let t=JSON.stringify(e);return t=t.replace(/\b(gte|gt|lte|lt)\b/g,(e=>`$${e}`)),this.query=this.query.find(JSON.parse(t)),this}sort(){if(this.queryString.sort){const e=this.queryString.sort.split(",").join(" ");this.query=this.query.sort(e)}else this.query=this.query.sort("-createdAt");return this}limitFields(){if(this.queryString.fields){const e=this.queryString.fields.split(",").join(" ");this.query=this.query.select(e)}else this.query=this.query.select("-__v");return this}paginate(){const e=1*this.queryString.page||1,t=1*this.queryString.limit||100,s=(e-1)*t;return this.query=this.query.skip(s).limit(t),this}}},"./packages/apps/nursesrent-api/src/utils/appError.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AppError=void 0;const r=s("./packages/apps/nursesrent-api/src/utils/index.ts");class AppError extends Error{constructor(e,t){super(e),this.statusCode=t,this.status=`${t}`.startsWith("4")?r.STATUS.FAIL:r.STATUS.ERROR,this.isOperational=!0,Error.captureStackTrace(this,this.constructor)}}t.AppError=AppError},"./packages/apps/nursesrent-api/src/utils/catchAsync.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.catchAsync=void 0;t.catchAsync=e=>(t,s,r)=>{e(t,s,r).catch(r)}},"./packages/apps/nursesrent-api/src/utils/constants.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.STATUS=t.ERRORTYPES=t.ENV=t.API_ROUTE2=t.API_ROUTE=void 0,t.API_ROUTE="/api/v1",t.API_ROUTE2="/api/v2",function(e){e.DEV="development",e.PROD="production"}(t.ENV||(t.ENV={})),function(e){e.CASTERROR="CastError",e.VALIDATIONERROR="ValidationError",e[e.DUBLICATEFIELDERROR=11e3]="DUBLICATEFIELDERROR",e.JSONWEBTOKENERROR="JsonWebTokenError",e.TOKENEXPIREDERROR="TokenExpiredError"}(t.ERRORTYPES||(t.ERRORTYPES={})),function(e){e.SUCCESS="success",e.FAIL="fail",e.ERROR="error"}(t.STATUS||(t.STATUS={}))},"./packages/apps/nursesrent-api/src/utils/index.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Email=void 0;const r=s("tslib");r.__exportStar(s("./packages/apps/nursesrent-api/src/utils/constants.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/utils/labels.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/utils/apiFeatures.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/utils/appError.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/utils/catchAsync.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/utils/utilityFunctions.ts"),t),r.__exportStar(s("./packages/apps/nursesrent-api/src/utils/interfaces.ts"),t);var a=s("./packages/apps/nursesrent-api/src/utils/Email.ts");Object.defineProperty(t,"Email",{enumerable:!0,get:function(){return a.default}})},"./packages/apps/nursesrent-api/src/utils/interfaces.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},"./packages/apps/nursesrent-api/src/utils/labels.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NO_DOC_FOUND=void 0,t.NO_DOC_FOUND="No document found with that ID"},"./packages/apps/nursesrent-api/src/utils/utilityFunctions.ts":(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.generateUrl=t.signOrEncryptTokens=t.sendUserTokenSuccess=t.signJWTToken=t.checkId=void 0;const r=s("tslib"),a=s("jsonwebtoken"),o=s("crypto"),n=s("./packages/apps/nursesrent-api/src/utils/index.ts"),i=s("./packages/libs/shared/src/index.ts"),u=s("mongoose"),p=s("./packages/apps/nursesrent-api/src/utils/index.ts");t.checkId=(e,t)=>{if(!u.default.Types.ObjectId.isValid(e))return t(new p.AppError("Please provide a valid id.",i.eStatusCode.BAD_REQUEST))};t.signJWTToken=e=>a.sign({id:e._id,email:e.email},process.env.JWT_SECRET_KEY,{expiresIn:process.env.JWT_TOKEN_EXPIRES_IN});t.sendUserTokenSuccess=(e,s,r=i.eStatusCode.OK)=>{const a=(0,t.signJWTToken)(e),o={expires:new Date(Date.now()+24*process.env.JWT_COOKIE_EXPIRES_IN*60*60*1e3),httpOnly:!0,sameSite:"lax",secure:!1};return"development"!==n.ENV.PROD&&(o.secure=!0),s.cookie("jwt",a,o),e.isVerified?s.status(r).json({status:n.STATUS.SUCCESS,token:a}):s.status(r).json({status:n.STATUS.SUCCESS,token:a,message:"Please verify your email account!"})};t.signOrEncryptTokens=e=>r.__awaiter(void 0,void 0,void 0,(function*(){if(!e){const e=o.randomBytes(32).toString("hex");return{token:e,hashedToken:o.createHash("sha256").update(e).digest("hex")}}return{token:e,hashedToken:o.createHash("sha256").update(e).digest("hex")}}));t.generateUrl=e=>({baseFrontUrl:`${e.protocol}://${e.get("host")}`,baseApiUrl:`${e.protocol}://${e.get("host")}/api/v1`})},"./packages/libs/shared/src/index.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.eTransportationMethod=t.eFavouriteUnitType=t.eFavouriteStateToWork=t.eSpeciality=t.eOccupation=t.ePropertyType=t.eBedroom=t.eBathroom=t.eMinimumDuration=t.eLicenceType=t.eRoomType=t.eStatusCode=t.eHttpMethod=t.eApiRoutes=void 0,function(e){e.BASE="/api/v1",e.PROPERTIES="properties",e.NURSE="nurses",e.HOST="hosts",e.SIGNUP="/signup",e.VERIFYACCOUNT="/sendverificationtoken",e.SIGNIN="/signin",e.REFRESHUSER="/refreshuser",e.FORGOTPASSWORD="/forgotpassword",e.RESETPASSWORD="/resetpassword",e.UPDATEPASSWORD="/updatepassword",e.LOGOUT="/logout",e.DISABLEME="/disbleme",e.DISABLEACCOUNT="/disableuser",e.UPDATEUSER="/updateuser",e.UPDATEME="/updateme",e.GETME="/me",e.GETUSER="/getuser"}(t.eApiRoutes||(t.eApiRoutes={})),function(e){e.GET="get",e.POST="post",e.PUT="put",e.PATCH="patch",e.DELETE="delete"}(t.eHttpMethod||(t.eHttpMethod={})),function(e){e[e.OK=200]="OK",e[e.CREATED=201]="CREATED",e[e.ACCEPTED=202]="ACCEPTED",e[e.NO_CONTENT=204]="NO_CONTENT",e[e.BAD_REQUEST=400]="BAD_REQUEST",e[e.UNAUTHORIZED=401]="UNAUTHORIZED",e[e.FORBIDDEN=403]="FORBIDDEN",e[e.NOT_FOUND=404]="NOT_FOUND",e[e.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",e[e.CONFLICT=409]="CONFLICT",e[e.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",e[e.BAD_GATEWAY=502]="BAD_GATEWAY",e[e.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",e[e.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT"}(t.eStatusCode||(t.eStatusCode={})),function(e){e.ENTIRE_UNIT="Entire unit",e.PRIVATE_ROOM="Room",e.HOTEL="Hotel",e.GROUP_RENTAL="Group Rental",e.PETS_WELCOME="Pets welcome"}(t.eRoomType||(t.eRoomType={})),function(e){e.TYPE1="type1"}(t.eLicenceType||(t.eLicenceType={})),t.eMinimumDuration||(t.eMinimumDuration={}),t.eBathroom||(t.eBathroom={}),t.eBedroom||(t.eBedroom={}),t.ePropertyType||(t.ePropertyType={}),t.eOccupation||(t.eOccupation={}),t.eSpeciality||(t.eSpeciality={}),t.eFavouriteStateToWork||(t.eFavouriteStateToWork={}),t.eFavouriteUnitType||(t.eFavouriteUnitType={}),t.eTransportationMethod||(t.eTransportationMethod={})},bcryptjs:e=>{e.exports=require("bcryptjs")},"cookie-parser":e=>{e.exports=require("cookie-parser")},cors:e=>{e.exports=require("cors")},dotenv:e=>{e.exports=require("dotenv")},express:e=>{e.exports=require("express")},"express-mongo-sanitize":e=>{e.exports=require("express-mongo-sanitize")},"express-rate-limit":e=>{e.exports=require("express-rate-limit")},helmet:e=>{e.exports=require("helmet")},hpp:e=>{e.exports=require("hpp")},jsonwebtoken:e=>{e.exports=require("jsonwebtoken")},mongoose:e=>{e.exports=require("mongoose")},morgan:e=>{e.exports=require("morgan")},nodemailer:e=>{e.exports=require("nodemailer")},tslib:e=>{e.exports=require("tslib")},uuid:e=>{e.exports=require("uuid")},validator:e=>{e.exports=require("validator")},"xss-clean":e=>{e.exports=require("xss-clean")},crypto:e=>{e.exports=require("crypto")},path:e=>{e.exports=require("path")},util:e=>{e.exports=require("util")}},t={};function s(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,s),o.exports}var r={};(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0}),s("dotenv").config();const t=s("mongoose"),a=s("./packages/apps/nursesrent-api/src/app/index.ts");process.on("uncaughtException",(e=>{console.log("Uncaught Exception! >>>>> Shooting down...","\n",e.name,"-",e.message),process.exit(1)}));const o=process.env.MONGO_CONECTION_STRING.replace("<PASSWORD>",process.env.MONGO_PASSWORD);t.default.set("strictQuery",!0),t.default.connect(o,{autoIndex:!0,maxPoolSize:10,serverSelectionTimeoutMS:5e3,socketTimeoutMS:45e3,family:4}).then((e=>{console.log("connected to the db")})).catch((e=>console.error(e.name,"-",e.message,"\n",e)));const n=process.env.PORT||3333,i=a.default.listen(n,(()=>{console.log(`Server running on port ${n}...`)}));process.on("unhandledRejection",(e=>{console.log("Unhandled Rejection! >>>>> Shooting down...","\n",e.name,"-",e.message),i.close((()=>{process.exit(1)}))}))})();var a=exports;for(var o in r)a[o]=r[o];r.__esModule&&Object.defineProperty(a,"__esModule",{value:!0})})();
//# sourceMappingURL=main.js.map